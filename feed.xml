

<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://4g3nt47.github.io/</id>
  <title>4g3nt47</title>
  <subtitle>A simple blog for InfoSec and other tech-related stuffs!</subtitle>
  <updated>2022-01-25T11:07:04+01:00</updated>
  <author>
    <name>Umar Abdul</name>
    <uri>https://4g3nt47.github.io/</uri>
  </author>
  <link rel="self" type="application/atom+xml" href="https://4g3nt47.github.io/feed.xml"/>
  <link rel="alternate" type="text/html" hreflang="en"
    href="https://4g3nt47.github.io/"/>
  <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator>
  <rights> Â© 2022 Umar Abdul </rights>
  <icon>/assets/img/favicons/favicon.ico</icon>
  <logo>/assets/img/favicons/favicon-96x96.png</logo>


  
  <entry>
    <title>Exploiting Web Applications with MITM Proxy and Elinks</title>
    <link href="https://4g3nt47.github.io/posts/tutorial/mitmproxy.html" rel="alternate" type="text/html" title="Exploiting Web Applications with MITM Proxy and Elinks" />
    <published>2022-01-25T00:00:00+01:00</published>
  
    <updated>2022-01-25T00:00:00+01:00</updated>
  
    <id>https://4g3nt47.github.io/posts/tutorial/mitmproxy.html</id>
    <content src="https://4g3nt47.github.io/posts/tutorial/mitmproxy.html" />
    <author>
      <name>Umar Abdul</name>
    </author>

  
    
    <category term="tutorial" />
    
  

  
    <summary>
      
      In this little tutorial, I demonstrate how to use mitmproxy and elinks to exploit a vulnerable web app completely from the command line. The target used is DVWA (Damn Vulnerable Web Application), which is running locally in a docker container.



The Tools


Elinks is a console-based web browser that can be used to browse through websites from the command line. From the manual;


  ELinks is a ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Forge - HackTheBox</title>
    <link href="https://4g3nt47.github.io/posts/hackthebox/forge.html" rel="alternate" type="text/html" title="Forge - HackTheBox" />
    <published>2022-01-23T00:00:00+01:00</published>
  
    <updated>2022-01-23T00:00:00+01:00</updated>
  
    <id>https://4g3nt47.github.io/posts/hackthebox/forge.html</id>
    <content src="https://4g3nt47.github.io/posts/hackthebox/forge.html" />
    <author>
      <name>Umar Abdul</name>
    </author>

  
    
    <category term="hackthebox" />
    
  

  
    <summary>
      
      Forge is a very nice medium linux box featuring a web service that allows for local and remote file upload (via URL). After the upload, user is given a random URL to access the uploaded file. This URL upload functionality has a filter that attempts to block SSRFs, but the filter is flawed, and could be exploited to reach another subdomain on the server that foreign hosts are not allowed to dire...
    </summary>
  

  </entry>

  
  <entry>
    <title>Previse - HackTheBox</title>
    <link href="https://4g3nt47.github.io/posts/hackthebox/previse.html" rel="alternate" type="text/html" title="Previse - HackTheBox" />
    <published>2022-01-16T00:00:00+01:00</published>
  
    <updated>2022-01-16T00:00:00+01:00</updated>
  
    <id>https://4g3nt47.github.io/posts/hackthebox/previse.html</id>
    <content src="https://4g3nt47.github.io/posts/hackthebox/previse.html" />
    <author>
      <name>Umar Abdul</name>
    </author>

  
    
    <category term="hackthebox" />
    
  

  
    <summary>
      
      Previse is an easy linux box that I really enjoyed. It has an Execute After Redirect (EAR) vulnerability, whereby the application issues a redirect when an unauthenticated user is attempting to access protected pages. However, the contents of the page is still returned in the body of the 302 redirect, but would be hard to notice in a browser as the browser will immediately follow the redirect. ...
    </summary>
  

  </entry>

  
  <entry>
    <title>Writer - HackTheBox</title>
    <link href="https://4g3nt47.github.io/posts/hackthebox/writer.html" rel="alternate" type="text/html" title="Writer - HackTheBox" />
    <published>2021-12-11T00:00:00+01:00</published>
  
    <updated>2021-12-11T00:00:00+01:00</updated>
  
    <id>https://4g3nt47.github.io/posts/hackthebox/writer.html</id>
    <content src="https://4g3nt47.github.io/posts/hackthebox/writer.html" />
    <author>
      <name>Umar Abdul</name>
    </author>

  
    
    <category term="hackthebox" />
    
  

  
    <summary>
      
      Writer is definitely one of the toughest boxes I have ever solved at the time of writing this. It features a website that is vulnerable to SQL injection, which leads to authentication bypass. Once you have access, there is a feature that allows you to add and edit stories, which is vulnerable to command injection in the filename, but will be tricky to spot without using the SQL injection flaw a...
    </summary>
  

  </entry>

  
  <entry>
    <title>BountyHunter - HackTheBox</title>
    <link href="https://4g3nt47.github.io/posts/hackthebox/bountyhunter.html" rel="alternate" type="text/html" title="BountyHunter - HackTheBox" />
    <published>2021-11-18T00:00:00+01:00</published>
  
    <updated>2021-11-18T00:00:00+01:00</updated>
  
    <id>https://4g3nt47.github.io/posts/hackthebox/bountyhunter.html</id>
    <content src="https://4g3nt47.github.io/posts/hackthebox/bountyhunter.html" />
    <author>
      <name>Umar Abdul</name>
    </author>

  
    
    <category term="hackthebox" />
    
  

  
    <summary>
      
      Another interesting easy linux box, Bounty Hunter is a box that features a web application that is vulnerable to XML External Entitiy injection. This flaw allows an attacker to read local files on the server, which can be used to download a PHP file that contains a username and password, which grants access to box over SSH.

The privesc is a CTF-like challenge, where a custom script used to val...
    </summary>
  

  </entry>

</feed>

